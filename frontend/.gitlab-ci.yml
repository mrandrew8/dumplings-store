include:
  - template: Security/SAST.gitlab-ci.yml 

stages:
  - build #сборка
  - test #test
  - notify #уведомление
  - release

variables:
  VERSION: 1.0.${CI_PIPELINE_ID} # добавил перменную версия


build-frontend-code-job: #задача с именем build-frontend-code-job
  stage: build
  rules:
    - changes: 
      - frontend/* #только для изменений в директории frontend
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
  script: 
    - echo "test"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/frontend"
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/dumpling-frontend:$VERSION"
      --build-arg VERSION=$VERSION
      --cache=true
    - echo "$CI_REGISTRY_IMAGE"


sonarqube-frontend-sast:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest #образ
  script: 
    - cd frontend
    - pwd
    - ls -lah
    - sonar-scanner
      -Dsonar.projectName="std-024-12-frontend"
      -Dsonar.host.url="https://sonarqube.praktikum-services.ru"
      -Dsonar.login="3a1c2fde38192bc083336d644677fdf15fdb7f49"
      -Dsonar.projectKey="std-024-12-frontend"
      -Dsonar.sources="."
      -Dsonar.qualitygate.wait=false
  needs:
    - build-frontend-code-job # прописываем зависимость от джоба с именем build-frontend-code-job




telegram-notification-frontend: #задача с именем telegram-notification-frontend
  variables:
      TEXT: "Андрей Николаев собрал frontend ${CI_PROJECT_URL}/-/jobs/$PREV_JOB_ID/artifacts/download" #обьявление перменных, где ci_project_url - урл проекта, prev_job_id - переменная, обявленная в джобе build-frontend-code-job и сохраненная в {CI_PROJECT_DIR}/build.env
      TLGRM: "https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage"
  stage: notify #этап уведомлений
  only:
    changes:
    - frontend/*/** #только для изменений в директории frontend
    variables:
    - $CI_COMMIT_MESSAGE =~ /send notification/ # только для изменений содержащих в сообщении коммита "send notification"
  script:
  #  - echo "The PREV_JOB_ID is ${PREV_JOB_ID}"  проверки, при помощи которых я определял, что записано в переменную prev_job_id
    - 'curl -X POST -H "Content-type: application/json" --data "{\"chat_id\": \"-1002134018008\", \"text\": \"${TEXT}\" }" ${TLGRM}' #отправка курлом сообщения методом post
  needs:
    - build-frontend-code-job # прописываем зависимость от джоба с именем build-frontend-code-job


release:
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  cache: [ ]
  stage: release
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/dumpling-frontend:$VERSION latest
  needs:
    - build-frontend-code-job


