include:
  - template: Security/SAST.gitlab-ci.yml 

stages: 
  - build  #сборка
  - test #test
  - release
  - notify  #уведомление1


# variables:
#   VERSION: 1.0.${CI_PIPELINE_ID} # добавил перменную версия


build-backend-code-job: #задача с именем build-backend-code-job
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
  script: 
    - echo "test"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/dumpling-backend:$VERSION"
      --build-arg VERSION=$VERSION
#      --cache=true
    - echo "$CI_REGISTRY_IMAGE"


backend-test:  #задача с именем backend-test
  image: golang:1.16-alpine
  stage: test
  script:
    - cd backend
    - CGO_ENABLED=0 go test -v ./... 
  needs: 
    - build-backend-code-job
    

sonarqube-backend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest #образ
  script:
    - cd backend
    # прописываем переменные для sonarqube
    - sonar-scanner
      -Dsonar.projectName=${sonar_projectName_backend}
      -Dsonar.host.url=${sonar_host_url}
      -Dsonar.login=${sonar_login_backend}
      -Dsonar.projectKey=${sonar_projectKey_backend}
      -Dsonar.qualitygate.wait=true # если проверка код не соответсвует quality gates, обрываем пайп
  needs:
    - build-backend-code-job # прописываем зависимость от джоба с именем build-backend-code-job


release:
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  cache: [ ]
  stage: release
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/dumpling-backend:$VERSION latest
  needs:
    - build-backend-code-job


telegram-notification-backend: #задача с именем telegram-notification-backend
  variables:
      TEXT: "Андрей Николаев собрал backend ${CI_PROJECT_URL}/-/jobs/${PREV_JOB_ID}/artifacts/download" #обьявление перменных, где ci_project_url - урл проекта, prev_job_id - переменная, обявленная в джобе build-backend-code-job и сохраненная в {CI_PROJECT_DIR}/build.env
      TLGRM: ${TLGRM}
  stage: notify #этап уведомлений
  only:
    variables: #РАСКОМЕНТИТЬ НЕ ЗАБУДЬ ЭТУ СТРОКУ И СЛЕДУЮЩУЮ!!!!!!!!!!!!
    - $CI_COMMIT_MESSAGE =~ /send notification/ # только для изменений содержащих в сообщении коммита "send notification"
  script:
    - 'curl -X POST -H "Content-type: application/json" --data "{\"chat_id\": \"-1002134018008\", \"text\": \"${TEXT}\" }" ${TLGRM}' #отправка курлом сообщения методом post
  needs:
    - build-backend-code-job # прописываем зависимость от джоба с именем build-backend-code-job
#добавил изменения для проверки


